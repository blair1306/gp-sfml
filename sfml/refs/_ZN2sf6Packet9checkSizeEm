<dec f='codebrowser/include/SFML/Network/Packet.hpp' l='278' type='bool sf::Packet::checkSize(std::size_t size)'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='99' u='a' c='_ZNK2sf6PacketcvMS0_FbmEEv'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='117' u='c' c='_ZN2sf6PacketrsERa'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='130' u='c' c='_ZN2sf6PacketrsERh'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='143' u='c' c='_ZN2sf6PacketrsERs'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='156' u='c' c='_ZN2sf6PacketrsERt'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='169' u='c' c='_ZN2sf6PacketrsERi'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='182' u='c' c='_ZN2sf6PacketrsERj'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='195' u='c' c='_ZN2sf6PacketrsERx'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='218' u='c' c='_ZN2sf6PacketrsERy'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='241' u='c' c='_ZN2sf6PacketrsERf'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='254' u='c' c='_ZN2sf6PacketrsERd'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='271' u='c' c='_ZN2sf6PacketrsEPc'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='293' u='c' c='_ZN2sf6PacketrsERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='313' u='c' c='_ZN2sf6PacketrsEPw'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='337' u='c' c='_ZN2sf6PacketrsERNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEE'/>
<use f='codebrowser/src/SFML/Network/Packet.cpp' l='360' u='c' c='_ZN2sf6PacketrsERNS_6StringE'/>
<def f='codebrowser/src/SFML/Network/Packet.cpp' l='574' ll='579' type='bool sf::Packet::checkSize(std::size_t size)'/>
<doc f='codebrowser/src/SFML/Network/Packet.cpp' l='573'>////////////////////////////////////////////////////////////</doc>
<doc f='codebrowser/include/SFML/Network/Packet.hpp' l='268'>////////////////////////////////////////////////////////////
    /// \brief Check if the packet can extract a given number of bytes
    ///
    /// This function updates accordingly the state of the packet.
    ///
    /// \param size Size to check
    ///
    /// \return True if \a size bytes can be read from the packet
    ///
    ////////////////////////////////////////////////////////////</doc>
