<dec f='codebrowser/include/SFML/Graphics/Sprite.hpp' l='99' type='void sf::Sprite::setTexture(const sf::Texture &amp; texture, bool resetRect = false)'/>
<use f='codebrowser/src/SFML/Graphics/Sprite.cpp' l='49' u='c' c='_ZN2sf6SpriteC1ERKNS_7TextureE'/>
<use f='codebrowser/src/SFML/Graphics/Sprite.cpp' l='58' u='c' c='_ZN2sf6SpriteC1ERKNS_7TextureERKNS_4RectIiEE'/>
<def f='codebrowser/src/SFML/Graphics/Sprite.cpp' l='64' ll='72' type='void sf::Sprite::setTexture(const sf::Texture &amp; texture, bool resetRect = false)'/>
<doc f='codebrowser/src/SFML/Graphics/Sprite.cpp' l='63'>////////////////////////////////////////////////////////////</doc>
<doc f='codebrowser/include/SFML/Graphics/Sprite.hpp' l='80'>////////////////////////////////////////////////////////////
    /// \brief Change the source texture of the sprite
    ///
    /// The \a texture argument refers to a texture that must
    /// exist as long as the sprite uses it. Indeed, the sprite
    /// doesn&apos;t store its own copy of the texture, but rather keeps
    /// a pointer to the one that you passed to this function.
    /// If the source texture is destroyed and the sprite tries to
    /// use it, the behavior is undefined.
    /// If \a resetRect is true, the TextureRect property of
    /// the sprite is automatically adjusted to the size of the new
    /// texture. If it is false, the texture rect is left unchanged.
    ///
    /// \param texture   New texture
    /// \param resetRect Should the texture rect be reset to the size of the new texture?
    ///
    /// \see getTexture, setTextureRect
    ///
    ////////////////////////////////////////////////////////////</doc>
