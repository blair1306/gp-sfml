<dec f='codebrowser/include/SFML/Graphics/Shader.hpp' l='119' type='bool sf::Shader::loadFromFile(const std::string &amp; filename, sf::Shader::Type type)'/>
<doc f='codebrowser/include/SFML/Graphics/Shader.hpp' l='100'>////////////////////////////////////////////////////////////
    /// \brief Load the vertex, geometry or fragment shader from a file
    ///
    /// This function loads a single shader, vertex, geometry or
    /// fragment, identified by the second argument.
    /// The source must be a text file containing a valid
    /// shader in GLSL language. GLSL is a C-like language
    /// dedicated to OpenGL shaders; you&apos;ll probably need to
    /// read a good documentation for it before writing your
    /// own shaders.
    ///
    /// \param filename Path of the vertex, geometry or fragment shader file to load
    /// \param type     Type of shader (vertex, geometry or fragment)
    ///
    /// \return True if loading succeeded, false if it failed
    ///
    /// \see loadFromMemory, loadFromStream
    ///
    ////////////////////////////////////////////////////////////</doc>
<def f='codebrowser/src/SFML/Graphics/Shader.cpp' l='243' ll='260' type='bool sf::Shader::loadFromFile(const std::string &amp; filename, sf::Shader::Type type)'/>
<doc f='codebrowser/src/SFML/Graphics/Shader.cpp' l='242'>////////////////////////////////////////////////////////////</doc>
